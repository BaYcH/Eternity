Ext.data.JsonP.HIN_MessageType({"tagname":"class","name":"HIN.MessageType","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-HIN.MessageType","members":{"cfg":[],"property":[{"name":"category","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-category"},{"name":"formHtml","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-formHtml"},{"name":"messages","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-messages"},{"name":"queryString","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-queryString"},{"name":"state","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-state"},{"name":"status","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-status"},{"name":"title","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-title"},{"name":"type","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-type"},{"name":"typeName","tagname":"property","owner":"HIN.MessageType","meta":{},"id":"property-typeName"}],"method":[{"name":"addMessage","tagname":"method","owner":"HIN.MessageType","meta":{},"id":"method-addMessage"},{"name":"getMessage","tagname":"method","owner":"HIN.MessageType","meta":{},"id":"method-getMessage"},{"name":"getMessages","tagname":"method","owner":"HIN.MessageType","meta":{},"id":"method-getMessages"},{"name":"isMessageExist","tagname":"method","owner":"HIN.MessageType","meta":{},"id":"method-isMessageExist"},{"name":"removeAllMessages","tagname":"method","owner":"HIN.MessageType","meta":{},"id":"method-removeAllMessages"},{"name":"removeMessage","tagname":"method","owner":"HIN.MessageType","meta":{},"id":"method-removeMessage"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":4,"files":[{"filename":"MessageType.js","href":"MessageType.html#HIN-MessageType"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/MessageType.html#HIN-MessageType' target='_blank'>MessageType.js</a></div></pre><div class='doc-contents'><p>MessageType</p>\n\n<p>it holds the message type information like type, typeName, different\nmessages, status , state , queryString ,category, transactionType , finished\nand also the UI should be render based on the formHtml property against a\nmessage type.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-category' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-category' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-category' class='name expandable'>category</a><span> : Object</span></div><div class='description'><div class='short'>category holds the category like service,drug,role etc nothing but\nconcept class.Adding a message through UI which wi...</div><div class='long'><p>category holds the category like service,drug,role etc nothing but\nconcept class.Adding a message through UI which will depend on the\nconcept.</p>\n</div></div></div><div id='property-formHtml' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-formHtml' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-formHtml' class='name not-expandable'>formHtml</a><span> : Object</span></div><div class='description'><div class='short'><p>formHtml holds the name of the html which should be render in UI</p>\n</div><div class='long'><p>formHtml holds the name of the html which should be render in UI</p>\n</div></div></div><div id='property-messages' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-messages' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-messages' class='name expandable'>messages</a><span> : Array</span></div><div class='description'><div class='short'>messages holds the messages under the message type ...</div><div class='long'><p>messages holds the messages under the message type</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-queryString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-queryString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-queryString' class='name expandable'>queryString</a><span> : Object</span></div><div class='description'><div class='short'>queryString holds the query which will retrieve the messages based on the\nquery which is applicable only for dynamic ...</div><div class='long'><p>queryString holds the query which will retrieve the messages based on the\nquery which is applicable only for dynamic process definition</p>\n</div></div></div><div id='property-state' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-state' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-state' class='name expandable'>state</a><span> : Object</span></div><div class='description'><div class='short'>state holds the state of the step like 'read','empty'or 'unread',\n'current'. ...</div><div class='long'><p>state holds the state of the step like 'read','empty'or 'unread',\n'current'. 'read' : If all the messages are read(finished) under the step\nthen it should be 'read'. 'empty' : There is no messages under the step.\n'current' : At least one message and the status not read.</p>\n</div></div></div><div id='property-status' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-status' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-status' class='name expandable'>status</a><span> : String</span></div><div class='description'><div class='short'>status holds the status of the step like 'ACTIVE' or 'INACTIVE' , based\non the status the UI will be decide to show/h...</div><div class='long'><p>status holds the status of the step like 'ACTIVE' or 'INACTIVE' , based\non the status the UI will be decide to show/hide.</p>\n<p>Defaults to: <code>&quot;ACTIVE&quot;</code></p></div></div></div><div id='property-title' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-title' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-title' class='name not-expandable'>title</a><span> : Object</span></div><div class='description'><div class='short'><p>title holds the title of the message type</p>\n</div><div class='long'><p>title holds the title of the message type</p>\n</div></div></div><div id='property-type' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-type' class='name not-expandable'>type</a><span> : Object</span></div><div class='description'><div class='short'><p>type holds the type of the message type like 'PRPA_MT201000HT03'</p>\n</div><div class='long'><p>type holds the type of the message type like 'PRPA_MT201000HT03'</p>\n</div></div></div><div id='property-typeName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-property-typeName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-property-typeName' class='name expandable'>typeName</a><span> : Object</span></div><div class='description'><div class='short'>typeName holds the typeName of the message type like 'Diagnostic Test',\nwhich have same typeName will come under a si...</div><div class='long'><p>typeName holds the typeName of the message type like 'Diagnostic Test',\nwhich have same typeName will come under a single group</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addMessage' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-method-addMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-method-addMessage' class='name expandable'>addMessage</a>( <span class='pre'>message</span> ) : void</div><div class='description'><div class='short'>addMessage method will add the message under the message type. ...</div><div class='long'><p>addMessage method will add the message under the message type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : Object<div class='sub-desc'><p>:</p>\n\n<pre><code>       Its an object of message class.\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-method-getMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-method-getMessage' class='name expandable'>getMessage</a>( <span class='pre'>messageId</span> ) : Message</div><div class='description'><div class='short'>getMessage method will return the message under this message type based on\nthe messageId which is passed as parameter...</div><div class='long'><p>getMessage method will return the message under this message type based on\nthe messageId which is passed as parameter to the method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>messageId</span> : Object<div class='sub-desc'><p>:</p>\n\n<pre><code>       Its a string which hold the id of message\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Message</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getMessages' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-method-getMessages' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-method-getMessages' class='name expandable'>getMessages</a>( <span class='pre'></span> ) : Message[]</div><div class='description'><div class='short'>getMessages method will return all the messages under this message type. ...</div><div class='long'><p>getMessages method will return all the messages under this message type.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Message[]</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isMessageExist' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-method-isMessageExist' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-method-isMessageExist' class='name expandable'>isMessageExist</a>( <span class='pre'>message</span> ) : Boolean</div><div class='description'><div class='short'>isMessageExist method will return true or false based on the message which is\npassed as parameter to the method. ...</div><div class='long'><p>isMessageExist method will return true or false based on the message which is\npassed as parameter to the method. *</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : Object<div class='sub-desc'><p>:</p>\n\n<pre><code>       Its an object of message\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removeAllMessages' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-method-removeAllMessages' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-method-removeAllMessages' class='name expandable'>removeAllMessages</a>( <span class='pre'></span> ) : void</div><div class='description'><div class='short'>removeAllMessages method will remove all the messages under the message type. ...</div><div class='long'><p>removeAllMessages method will remove all the messages under the message type.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removeMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='HIN.MessageType'>HIN.MessageType</span><br/><a href='source/MessageType.html#HIN-MessageType-method-removeMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/HIN.MessageType-method-removeMessage' class='name expandable'>removeMessage</a>( <span class='pre'>message</span> ) : Boolean</div><div class='description'><div class='short'>removeMessage method will remove the message under the message type. ...</div><div class='long'><p>removeMessage method will remove the message under the message type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : Object<div class='sub-desc'><p>:</p>\n\n<pre><code>       Its an object of message\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});