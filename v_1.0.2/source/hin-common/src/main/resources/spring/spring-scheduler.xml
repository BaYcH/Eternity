<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task-3.0.xsd" >

    <!--
        	References:
			Task Scheduling Simplifications in Spring 3.0
			- http://blog.springsource.com/2010/01/05/task-scheduling-simplifications-in-spring-3-0/  
			Spring Framework 3 Reference;
			- http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/scheduling.html
    -->


    <!-- Make sure to add the <context:component-scan base-package="" /> first -->


    <!-- Activates @Scheduled and @Async annotations for scheduling -->

    <task:annotation-driven
        executor="executorWithPoolSizeRange"
        scheduler="taskScheduler" />

    <!--
			The 'executor' element:
			When a task is submitted, the executor will first 
			try to use a free thread if the number of active threads is currently less than 
			the core size. If the core size has been reached, then the task will be added 
			to the queue as long as its capacity has not yet been reached. Only then, 
			if the queue's capacity has been reached, will the executor create a new 
			thread beyond the core size. If the max size has also been reached, then 
			the executor will reject the task 
			See: 25.4.2 The 'executor' element
    -->
    <!--
         Defines a ThreadPoolTaskExecutor instance with configurable pool size, queue-capacity, keep-alive, 
			 and rejection-policy values. The id becomes the default thread name prefix
    -->

    <task:executor
        id="executorWithPoolSizeRange"
        pool-size="5-25"
        queue-capacity="100" />

    <!--
          Defines a ThreadPoolTaskScheduler instance with configurable pool size.
	 		The id becomes the default thread name prefix.
    -->

    <task:scheduler
        id="taskScheduler"
        pool-size="1" />

    <task:scheduled-tasks>
		<!--   cron="*0 0 6 * * ?" -->
		
		<!-- 
			Couch DB to Cassandra DB Scheduler configuration.
			There are total 6 parameters for the 'cron' attribute.
			1 - Run every X seconds
			2 - Run every X minutes
			3 - Run every X hours
			4 - Run every X days
			5 - Run every X weeks
			6 - Run every X years
			More detailed documentation is at: 
			http://javahunter.wordpress.com/2011/05/05/cronscheduler-in-spring/
		-->
        <task:scheduled
            cron="0 0 6 * * ?"
            method="doSchedule"
            ref="schedulerService" />
    </task:scheduled-tasks>

</beans>